{"version":3,"sources":["logo.svg","components/home/home.js","components/list-item/list-item.js","components/list-panel/list-panel.js","components/list-form/list-form.js","components/new-list/new-list.js","components/lists-item/lists-item.js","components/lists-panel/lists-panel.js","components/edit-lists/edit-lists.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","home","className","ListItem","index","name","click","onClick","ListPanel","list","addToListsClk","deleteHandler","listItems","map","item","key","ListForm","listName","listItemName","itemNameHdl","listNameHdl","addItemClk","deleteItemClk","onChange","value","NewList","ListsItem","id","history","useHistory","push","editList","ListsPanel","lists","editListHandler","listsItems","EditLists","editListsClk","App","useState","React","setLists","setListItems","setListName","listId","setListId","setListItemName","onChangeItemNameHandler","e","target","onChangeListNameHandler","onClickAddItemHandler","alert","onClickDeleteListItemHandler","splice","onClickAddToLists","existingItem","find","editedListObject","indexOf","newListObject","Math","random","onClickEditList","src","logo","alt","exact","to","path","component","Home","render","props","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,kC,sWCY5BC,G,MATF,WACX,OACE,6BAASC,UAAU,mBACjB,+CAAoB,0BAAMA,UAAU,eAAhB,sBAApB,UACA,gGCESC,G,MANE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC7B,OACI,yBAAKJ,UAAU,YAAYK,QAAS,kBAAMD,EAAMF,KAASC,KCelDG,G,MAhBG,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAChCC,EAAYH,EAAKI,KAAI,SAACC,EAAMV,GAAP,OAAkB,kBAAC,EAAD,CAAUW,IAAKX,EAAOA,MAAOA,EAAOC,KAAMS,EAAMR,MAAOK,OAEpG,OACI,6BACI,yBAAKT,UAAU,iBACVU,GAEL,yBAAKV,UAAU,iBACX,4BAAQK,QAAS,kBAAMG,EAAcD,KAArC,SAEJ,yBAAKP,UAAU,mBAAf,iBCaGc,G,MAxBE,SAAC,GAQO,IAPrBJ,EAOoB,EAPpBA,UACAK,EAMoB,EANpBA,SACAC,EAKoB,EALpBA,aACAC,EAIoB,EAJpBA,YACAC,EAGoB,EAHpBA,YACAC,EAEoB,EAFpBA,WACAC,EACoB,EADpBA,cACAZ,EAAoB,EAApBA,cACA,OACI,6BACI,yBAAKR,UAAU,qBACX,yBAAKA,UAAU,YACX,8CAA0B,2BAAOqB,SAAUH,EAAaI,MAAOP,KAEnE,yBAAKf,UAAU,uBACX,4CAAwB,2BAAOqB,SAAUJ,EAAaK,MAAON,IAAe,4BAAQX,QAASc,GAAjB,cAGpF,kBAAC,EAAD,CAAWZ,KAAMG,EAAWF,cAAeA,EAAeC,cAAeW,OCRtEG,G,MAXC,SAAC,GAA+G,IAA7Gb,EAA4G,EAA5GA,UAAWK,EAAiG,EAAjGA,SAAUC,EAAuF,EAAvFA,aAAcC,EAAyE,EAAzEA,YAAaC,EAA4D,EAA5DA,YAAaC,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,cAAeZ,EAAoB,EAApBA,cACzG,OACE,6BAASR,UAAU,oBACf,yBAAKA,UAAU,yBACb,kOACA,kBAAC,EAAD,CAAUU,UAAWA,EAAWK,SAAUA,EAAUC,aAAcA,EAAcC,YAAaA,EAAaC,YAAaA,EAAaC,WAAYA,EAAYC,cAAeA,EAAeZ,cAAeA,QCQpMgB,G,MARG,SAAC,GAAyB,IAAvBZ,EAAsB,EAAtBA,KAAMa,EAAgB,EAAhBA,GAAIrB,EAAY,EAAZA,MACzBsB,EAAUC,cAEZ,OACI,yBAAK3B,UAAU,aAAaG,KAAMsB,EAAIpB,QAAS,kBATtC,SAACO,EAAMR,EAAOsB,GAC3BtB,EAAMQ,GACNc,EAAQE,KAAK,aAO4CC,CAASjB,EAAMR,EAAOsB,KAAWd,EAAKG,YCGpFe,G,MAZI,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,gBACnBC,EAAaF,EAAMpB,KAAI,SAACC,EAAMV,GAAP,OAAkB,kBAAC,EAAD,CAAWW,IAAKX,EAAOU,KAAMA,EAAMa,GAAIb,EAAKa,GAAIrB,MAAO4B,OAEtG,OACI,6BACI,yBAAKhC,UAAU,iBACViC,MCOFC,G,MAbG,SAAC,GAA6B,IAA3BH,EAA0B,EAA1BA,MAAOI,EAAmB,EAAnBA,aAG1B,OACE,6BAASnC,UAAU,qBACjB,yBAAKA,UAAU,uBACb,wFACA,kBAAC,EAAD,CAAY+B,MAAOA,EAAOC,gBAAiBG,Q,uBCmIpCC,MAjIf,WAAgB,IACNC,EAAaC,IAAbD,SADK,EAEaA,EACxB,CACE,CACEZ,GAAI,IACJV,SAAU,eACVL,UAAU,CACR,UACA,OACA,KACA,SACA,QAGJ,CACEe,GAAI,IACJV,SAAU,SACVL,UAAW,CACT,QACA,QACA,YACA,OACA,MACA,UAxBK,mBAENqB,EAFM,KAECQ,EAFD,OA4BqBF,EAAS,IA5B9B,mBA4BN3B,EA5BM,KA4BK8B,EA5BL,OA6BmBH,EAAS,IA7B5B,mBA6BNtB,EA7BM,KA6BI0B,EA7BJ,OA8BeJ,EAAS,IA9BxB,mBA8BNK,EA9BM,KA8BEC,EA9BF,OA+B2BN,EAAS,IA/BpC,mBA+BNrB,EA/BM,KA+BQ4B,EA/BR,KAiCPC,EAA0B,SAAAC,GAC9BF,EAAgBE,EAAEC,OAAOzB,QAGrB0B,EAA0B,SAAAF,GAC5BL,EAAYK,EAAEC,OAAOzB,QAGnB2B,EAAwB,SAAAH,GACzB9B,GACDwB,EAAa,GAAD,mBAAK9B,GAAL,CAAgBM,KAC5B4B,EAAgB,KAGhBM,MAAM,yCAIJC,EAA+B,SAACjD,GAClCQ,EAAU0C,OAAOlD,EAAM,GACvBsC,EAAa,YAAI9B,KAGf2C,EAAoB,SAAC9C,GACzB,IAAI+C,EAAevB,EAAMwB,MAAK,SAAA3C,GAAI,OAAIA,EAAKa,KAAOiB,KAElD,GAAGY,EAAa,CACd,IAAME,EAAmB,CACvB,GAAMd,EACN,SAAY3B,EACZ,UAAY,YAAKR,IAEnBwB,EAAMqB,OAAOrB,EAAM0B,QAAQH,GAAe,EAAGE,GAC7CjB,EAAS,YAAIR,IACba,EAAgB,IAChBH,EAAY,IACZE,EAAU,IACVH,EAAa,SAEV,GAAGzB,EAAS,CACb,IAAM2C,EAAgB,CACpB,GAAMC,KAAKC,SACX,SAAY7C,EACZ,UAAY,YAAKR,IAEnBgC,EAAS,GAAD,mBAAKR,GAAL,CAAY2B,KACpBd,EAAgB,IAChBH,EAAY,IACZE,EAAU,IACVH,EAAa,SAGbU,MAAM,yCAINW,EAAkB,SAACjD,GACrBgC,EAAgB,IAChBD,EAAU/B,EAAKa,IACfgB,EAAY7B,EAAKG,UACjByB,EAAa,YAAI5B,EAAKF,aAG1B,OACE,kBAAC,IAAD,KACE,yBAAKV,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAK8D,IAAKC,IAAM/D,UAAU,WAAWgE,IAAI,SACzC,wBAAIhE,UAAU,gBACZ,4BACE,kBAAC,IAAD,CAASiE,OAAK,EAACC,GAAG,KAAlB,SAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,aAAZ,aAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,UAAZ,iBAIN,6BAASlE,UAAU,iBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiE,OAAK,EAACE,KAAK,wBAAwBC,UAAWC,IACrD,kBAAC,IAAD,CACEJ,OAAK,EACLE,KAAK,YACLG,OAAQ,SAAAC,GAAK,OAAK,kBAAC,EAAD,iBAAaA,EAAb,CAAoB7D,UAAWA,EAAWK,SAAUA,EAAUC,aAAcA,EAAcC,YAAa4B,EAAyB3B,YAAa8B,EAAyB7B,WAAY8B,EAAuB7B,cAAe+B,EAA8B3C,cAAe6C,QAEzR,kBAAC,IAAD,CAAOY,OAAK,EAACE,KAAK,SAASG,OAAQ,SAAAC,GAAK,OAAK,kBAAC,EAAD,iBAAeA,EAAf,CAAsBxC,MAAOA,EAAOI,aAAc0B,aC1HvFW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASP,OAAO,kBAAC,EAAD,MAASQ,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.9354e90a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\nimport './home.css';\r\n\r\nconst home = () => {\r\n  return (\r\n    <section className=\"welcome-message\">\r\n      <h1>Welcome to your <span className=\"highlighted\">List Administrator</span> Tool!</h1>\r\n      <p>Navigate over the menu above to start playing with your lists.</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default home;\r\n","import React from 'react';\r\nimport './list-item.css';\r\n\r\nconst ListItem = ({ index, name, click }) => {\r\n    return (\r\n        <div className=\"list-item\" onClick={() => click(index)}>{name}</div>\r\n    );\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport ListItem from '../list-item/list-item'\r\nimport './list-panel.css';\r\n\r\nconst ListPanel = ({ list, addToListsClk, deleteHandler }) => {\r\n    const listItems = list.map((item, index) => (<ListItem key={index} index={index} name={item} click={deleteHandler} />));\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"panel-section\">\r\n                {listItems}\r\n            </div>\r\n            <div className=\"buttons-panel\">\r\n                <button onClick={() => addToListsClk(list)}>Save</button>\r\n            </div>\r\n            <div className=\"additional-text\">*Mandatory</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListPanel;","import React from 'react';\r\nimport ListPanel from \"../list-panel/list-panel\"\r\nimport './list-form.css';\r\n\r\nconst ListForm = ({\r\n    listItems,\r\n    listName,\r\n    listItemName,\r\n    itemNameHdl,\r\n    listNameHdl,\r\n    addItemClk,\r\n    deleteItemClk,\r\n    addToListsClk }) => {\r\n    return (\r\n        <div>\r\n            <div className=\"list-form-section\">\r\n                <div className=\"form-row\">\r\n                    <label>*List Name:</label><input onChange={listNameHdl} value={listName}/>\r\n                </div>\r\n                <div className=\"form-row top-margin\">\r\n                    <label>New Item:</label><input onChange={itemNameHdl} value={listItemName}/><button onClick={addItemClk}>Add Item</button>\r\n                </div>\r\n            </div>\r\n            <ListPanel list={listItems} addToListsClk={addToListsClk} deleteHandler={deleteItemClk} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListForm;","import React from 'react';\r\nimport ListForm from '../list-form/list-form'\r\nimport './new-list.css';\r\n\r\nconst NewList = ({ listItems, listName, listItemName, itemNameHdl, listNameHdl, addItemClk, deleteItemClk, addToListsClk }) => {\r\n  return (\r\n    <section className=\"new-list-section\">\r\n        <div className=\"new-list-form-section\">\r\n          <p>Specify a name for the list and add all its items by putting the item in the New Item box and hitting Add Item. If you want to delete an existing item, click over it. When you are done, hit Save.</p>\r\n          <ListForm listItems={listItems} listName={listName} listItemName={listItemName} itemNameHdl={itemNameHdl} listNameHdl={listNameHdl} addItemClk={addItemClk} deleteItemClk={deleteItemClk} addToListsClk={addToListsClk} />\r\n        </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default NewList;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './lists-item.css';\r\n\r\nconst editList = (item, click, history) => {\r\n    click(item);\r\n    history.push('/new-list');\r\n}\r\n\r\nconst ListsItem = ({ item, id, click }) => {\r\nconst history = useHistory();\r\n\r\n    return (\r\n        <div className=\"lists-item\" name={id} onClick={() => editList(item, click, history)}>{item.listName}</div>\r\n    );\r\n}\r\n\r\nexport default ListsItem;","import React from 'react';\r\nimport ListsItem from '../lists-item/lists-item'\r\nimport './lists-panel.css';\r\n\r\nconst ListsPanel = ({ lists, editListHandler }) => {\r\n    const listsItems = lists.map((item, index) => (<ListsItem key={index} item={item} id={item.id} click={editListHandler}/>));\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"panel-section\">\r\n                {listsItems}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListsPanel;","import React from 'react';\r\nimport ListsPanel from '../lists-panel/lists-panel';\r\nimport './edit-lists.css';\r\n\r\nconst EditLists = ({ lists, editListsClk }) => {\r\n\r\n  \r\n  return (\r\n    <section className=\"edit-list-section\">\r\n      <div className=\"edit-list-container\">\r\n        <p>Click over the name of the list if you want to view/edit.</p>\r\n        <ListsPanel lists={lists} editListHandler={editListsClk}/>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default EditLists;","import React from 'react';\nimport {\n  Route,\n  NavLink,\n  BrowserRouter as Router,\n  Switch\n} from 'react-router-dom';\nimport Home from './components/home/home'\nimport NewList from './components/new-list/new-list'\nimport EditLists from './components/edit-lists/edit-lists'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const { useState } = React;\n  const [lists, setLists] = useState(\n    [\n      {\n        id: \"1\",\n        listName: \"computadoras\",\n        listItems:[\n          \"toshiba\",\n          \"vaio\",\n          \"hp\",\n          \"lenovo\",\n          \"mac\"\n        ]\n      },\n      {\n        id: \"2\",\n        listName: \"carros\",\n        listItems: [\n          \"mazda\",\n          \"honda\",\n          \"chevrolet\",\n          \"ford\",\n          \"kia\",\n          \"bmw\"\n        ]\n      }\n    ]);\n  const [listItems, setListItems] = useState([]);\n  const [listName, setListName] = useState('');\n  const [listId, setListId] = useState('');\n  const [listItemName, setListItemName] = useState('');\n\n  const onChangeItemNameHandler = e => {\n    setListItemName(e.target.value);\n  }\n\n  const onChangeListNameHandler = e => {\n      setListName(e.target.value);\n  }\n\n  const onClickAddItemHandler = e => {\n    if(listItemName){\n      setListItems([...listItems, listItemName]);\n      setListItemName(\"\");\n    }\n    else {\n      alert(\"Please specify the name of the item.\");\n    }\n  }\n\n  const onClickDeleteListItemHandler = (index) => {\n      listItems.splice(index,1);\n      setListItems([...listItems]);\n  }\n\n  const onClickAddToLists = (list) => {\n    let existingItem = lists.find(item => item.id === listId);\n    \n    if(existingItem){\n      const editedListObject = {\n        \"id\": listId,\n        \"listName\": listName,\n        \"listItems\": [...list]\n      }\n      lists.splice(lists.indexOf(existingItem), 1, editedListObject);\n      setLists([...lists]);\n      setListItemName(\"\");\n      setListName(\"\");\n      setListId(\"\");\n      setListItems([]);\n    }\n    else if(listName){\n        const newListObject = {\n          \"id\": Math.random(),\n          \"listName\": listName,\n          \"listItems\": [...list]\n        }\n        setLists([...lists, newListObject]);\n        setListItemName(\"\");\n        setListName(\"\");\n        setListId(\"\");\n        setListItems([]);\n      }\n      else{\n        alert(\"Please specify the name of the list.\");\n      }\n    }\n\n  const onClickEditList = (item) => {\n      setListItemName(\"\");\n      setListId(item.id);\n      setListName(item.listName);\n      setListItems([...item.listItems]);\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <ul className=\"App-nav-list\">\n            <li>\n              <NavLink exact to=\"/\">Home</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/new-list\">New List</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/lists\">Edit Lists</NavLink>\n            </li>\n          </ul>\n        </header>\n        <section className=\"pages-content\">\n          <Switch>\n            <Route exact path=\"OpenMarketAssessment/\" component={Home} />\n            <Route\n              exact\n              path=\"/new-list\"\n              render={props => (<NewList {...props} listItems={listItems} listName={listName} listItemName={listItemName} itemNameHdl={onChangeItemNameHandler} listNameHdl={onChangeListNameHandler} addItemClk={onClickAddItemHandler} deleteItemClk={onClickDeleteListItemHandler} addToListsClk={onClickAddToLists}/>)}\n            />\n            <Route exact path=\"/lists\" render={props => (<EditLists {...props} lists={lists} editListsClk={onClickEditList}/>)}/>\n          </Switch>\n        </section>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}